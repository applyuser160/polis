name: CI

on:
  pull_request:
    branches:
      - master  # main への PR に対して実行

defaults:
  run:
    working-directory: codinsight

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv sync

      - name: Run tests with coverage
        run: uv run pytest --cov=src --cov-report=json:coverage.json

      - name: Debug coverage.json
        run: |
          ls -R ${{ github.workspace }}

      - name: Post coverage comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const data = JSON.parse(fs.readFileSync('./codinsight/coverage.json', 'utf8'));
            const files = data.files;

            // Markdown テーブルのヘッダーに新しい列を追加
            let table = `| File | Coverage | Pass |\n|------|----------|------|\n`;

            for (const [file, info] of Object.entries(files)) {
              const pct = info.summary.percent_covered.toFixed(1);
              const pass = info.summary.percent_covered >= 80
                ? '<span style="color:green">〇</span>'
                : '<span style="color:red">×</span>';
              table += `| ${file} | ${pct}% | ${pass} |\n`;
            }

            // 全体の合計も追加
            const totalPct = data.totals.percent_covered.toFixed(1);
            const totalPass = data.totals.percent_covered >= 80
              ? '<span style="color:green">〇</span>'
              : '<span style="color:red">×</span>';
            table += `\n**Total coverage: ${totalPct}% | ${totalPass}**`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: table
            });
